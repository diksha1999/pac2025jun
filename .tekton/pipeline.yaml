apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: sample-pipeline
  annotations:
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    - name: repo-url
      type: string
      description: The git repository URL to clone from.
    - name: revision
      type: string
      description: The git branch to clone.
      default: "main"
  workspaces:
    - name: source
      description: Workspace for the git repo
    - name: basic-auth
      description: Basic authentication for git
      optional: true
  tasks:
    - name: fetch-source
      taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: git-clone
      - name: namespace
        value: openshift-pipelines
    params:
    - name: URL
      value: $(params.repo-url)
    - name: SUBDIRECTORY
      value: ""
    - name: DELETE_EXISTING
      value: "true"
    - name: REVISION
      value: $(params.revision)
    workspaces:
    - name: output
      workspace: source
    - name: basic-auth
      workspace: basic-auth
    - name: list-files
      runAfter: ["fetch-source"]
      taskSpec:
        workspaces:
          - name: source
        steps:
          - name: list
            image: registry.redhat.io/ubi8/ubi-minimal:latest
            workingDir: $(workspaces.source.path)
            script: |
              #!/usr/bin/env bash
              echo "Files in the repository:"
              find . -type f -name "*.py" -o -name "*.yaml" -o -name "*.md" | head -20
      workspaces:
        - name: source
          workspace: source

    - name: python-test
      runAfter: ["list-files"]
      taskSpec:
        workspaces:
          - name: source
        steps:
          - name: test
            image: registry.redhat.io/ubi8/python-39:latest
            workingDir: $(workspaces.source.path)
            script: |
              #!/usr/bin/env bash
              echo "Running Python syntax check..."
              if [ -f "src/app.py" ]; then
                python3 -m py_compile src/app.py
                echo "✅ Python syntax check passed!"
              else
                echo "ℹ️ No Python files found to test"
              fi
      workspaces:
        - name: source
          workspace: source
